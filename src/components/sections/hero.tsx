"use client";

import { useState } from "react";
import { Button } from "../ui/button";
import { chatApi } from "../../lib/api";
import { useAuth } from "../../lib/auth-context";
import { LoginForm } from "../auth/LoginForm";

export function Hero() {
  const [textareaValue, setTextareaValue] = useState("–†–æ–ª—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–µ");
  const [essayResult, setEssayResult] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);
  const [error, setError] = useState("");

  const { user, token } = useAuth();

  const suggestedTopics = [
    "–ê–Ω–∞–ª–∏–∑ —Ç–µ–º—ã –º–µ—Å—Ç–∏ –≤ \"–ì–∞–º–ª–µ—Ç–µ\" –®–µ–∫—Å–ø–∏—Ä–∞",
    "–í–ª–∏—è–Ω–∏–µ COVID-19 –Ω–∞ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤",
    "–≠—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ",
    "–†–æ–ª—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–µ",
    "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–∞: –ø—Ä–∏—á–∏–Ω—ã, –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏ –ø—É—Ç–∏ —Ä–µ—à–µ–Ω–∏—è"
  ];

  const handleTopicClick = (topic: string) => {
    setTextareaValue(topic);
  };

  // –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç—Å—Å–µ
  const handleStartWriting = async () => {
    if (!textareaValue.trim()) return;

    setError("");
    setEssayResult("");
    setIsGenerating(true);

    try {
      const response = await chatApi.sendMessage({
        message: `–ù–∞–ø–∏—à–∏ —ç—Å—Å–µ –Ω–∞ —Ç–µ–º—É: ${textareaValue}`,
        // conversation_id –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º, AI —Å–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä
      });

      setEssayResult(response.response);
    } catch (err) {
      setError(err instanceof Error ? err.message : "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç—Å—Å–µ");
    } finally {
      setIsGenerating(false);
    }
  };

  return (
    <section className="relative min-h-screen bg-gradient-to-br from-slate-50 via-white to-blue-50 overflow-hidden">
      {/* –§–æ–Ω–æ–≤—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω */}
      <div className="absolute inset-0 bg-dots-pattern opacity-30"></div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="relative z-10 container mx-auto px-4 py-20">
        <div className="max-w-6xl mx-auto">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="text-center mb-16">
            <div className="inline-flex items-center gap-2 bg-blue-100 text-blue-800 px-4 py-2 rounded-full text-sm font-medium mb-8">
              <div className="w-2 h-2 bg-blue-500 rounded-full animate-pulse"></div>
              –ü–æ–º–æ—â–Ω–∏–∫ ‚Ññ1 –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤
            </div>

            <h1 className="text-5xl md:text-7xl font-bold bg-gradient-to-r from-gray-900 via-blue-900 to-purple-900 bg-clip-text text-transparent mb-8 leading-tight">
              –í–∞—à–µ —ç—Å—Å–µ ‚Äî –Ω–∞–ø–∏—Å–∞–Ω–æ
              <br />
              <span className="text-blue-600">–Ω–∞ 90% –±—ã—Å—Ç—Ä–µ–µ</span>
              <br />
              —Å –ø–æ–º–æ—â—å—é –ò–ò
            </h1>

            <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
              –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –∑–∞ –º–∏–Ω—É—Ç—ã. –ü–æ–ª—É—á–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —ç—Å—Å–µ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
            </p>
          </div>

          {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
          <div className="grid md:grid-cols-5 gap-6 mb-16">
            {[
              { icon: "‚ö°", text: "–ë—ã—Å—Ç—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞" },
              { icon: "üéØ", text: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏" },
              { icon: "üìö", text: "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏" },
              { icon: "üìù", text: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã" },
              { icon: "‚ú®", text: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏" }
            ].map((item, index) => (
              <div key={index} className="group">
                <div className="bg-white/80 backdrop-blur-sm border border-gray-200/50 rounded-2xl p-6 text-center hover:shadow-lg hover:bg-white transition-all duration-300 transform hover:-translate-y-1">
                  <div className="text-2xl mb-3">{item.icon}</div>
                  <div className="text-sm font-medium text-gray-700">{item.text}</div>
                </div>
              </div>
            ))}
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ */}
          <div className="max-w-4xl mx-auto">
            <div className="bg-white/90 backdrop-blur-lg rounded-3xl shadow-2xl border border-gray-200/50 p-8 md:p-12">
              {/* –¢–∏–ø—ã —Ä–∞–±–æ—Ç */}
              <div className="flex flex-wrap justify-center gap-4 mb-8">
                {[
                  { label: "–≠—Å—Å–µ", active: true },
                  { label: "–û–±–∑–æ—Ä –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã", active: false },
                  { label: "–ö–µ–π—Å-—Å—Ç–∞–¥–∏", active: false },
                  { label: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ", active: false }
                ].map((type, index) => (
                  <button
                    key={index}
                    className={`px-6 py-3 rounded-full text-sm font-medium transition-all duration-300 ${
                      type.active
                        ? "bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg"
                        : "bg-gray-100 text-gray-600 hover:bg-gray-200"
                    }`}
                  >
                    {type.label}
                  </button>
                ))}
              </div>

              {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
              <div className="mb-8">
                <textarea
                  className="w-full h-32 p-6 border-2 border-gray-200 rounded-2xl resize-none text-gray-700 focus:ring-4 focus:ring-blue-100 focus:border-blue-500 transition-all duration-300 text-lg placeholder-gray-400"
                  value={textareaValue}
                  onChange={(e) => setTextareaValue(e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –¥–ª—è —ç—Å—Å–µ..."
                />
              </div>

              {/* –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ —Ç–µ–º—ã */}
              <div className="mb-8">
                <p className="text-sm text-gray-600 mb-4 font-medium">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã:</p>
                <div className="flex flex-wrap gap-3">
                  {suggestedTopics.map((topic, index) => (
                    <button
                      key={index}
                      onClick={() => handleTopicClick(topic)}
                      className="bg-gradient-to-r from-gray-50 to-gray-100 border border-gray-200 text-gray-700 px-4 py-3 rounded-xl hover:from-blue-50 hover:to-purple-50 hover:border-blue-300 transition-all duration-300 text-sm font-medium text-left shadow-sm hover:shadow-md"
                    >
                      {topic}
                    </button>
                  ))}
                </div>
              </div>

              {/* –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
              {!token ? (
                <div className="space-y-6">
                  <div className="text-center">
                    <p className="text-gray-600 mb-4">–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç—Å—Å–µ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É:</p>
                  </div>
                  <LoginForm />
                </div>
              ) : (
                <Button
                  className="w-full py-6 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-2xl text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-[1.02]"
                  onClick={handleStartWriting}
                  disabled={isGenerating}
                >
                  {isGenerating ? (
                    <div className="flex items-center gap-3">
                      <div className="animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent"></div>
                      ‚ú® –ì–µ–Ω–µ—Ä–∏—Ä—É—é —ç—Å—Å–µ...
                    </div>
                  ) : (
                    <div className="flex items-center gap-3">
                      ‚ú® –ù–∞—á–∞—Ç—å –ø–∏—Å–∞—Ç—å
                    </div>
                  )}
                </Button>
              )}
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
          {essayResult && (
            <div className="max-w-4xl mx-auto mt-12">
              <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-3xl p-8 shadow-lg">
                <div className="flex items-center gap-3 mb-6">
                  <div className="w-10 h-10 bg-green-500 rounded-full flex items-center justify-center">
                    <span className="text-white text-xl">‚úì</span>
                  </div>
                  <h3 className="text-2xl font-bold text-green-800">–≠—Å—Å–µ –≥–æ—Ç–æ–≤–æ!</h3>
                </div>

                <div className="bg-white rounded-2xl p-6 shadow-sm border border-green-100">
                  <pre className="text-gray-700 whitespace-pre-wrap font-sans leading-relaxed text-base">
                    {essayResult}
                  </pre>
                </div>

                <p className="text-sm text-gray-600 mt-6 text-center">
                  –≠—Å—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –≤–∞—à–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–µ. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ —Ä–∞–±–æ—Ç—É –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã".
                </p>
              </div>
            </div>
          )}

          {/* –û—à–∏–±–∫–∞ */}
          {error && (
            <div className="max-w-2xl mx-auto mt-8">
              <div className="bg-red-50 border border-red-200 text-red-800 px-6 py-4 rounded-2xl shadow-sm">
                <div className="flex items-center gap-3">
                  <span className="text-xl">‚ö†Ô∏è</span>
                  <span className="font-medium">{error}</span>
                </div>
              </div>
            </div>
          )}

          {/* –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ */}
          <div className="text-center mt-20">
            <p className="text-gray-600 text-lg mb-8">
              –î–æ—Å—Ç—É–ø –∫ <span className="font-semibold text-gray-900">92,000+</span> –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
            </p>

            <div className="flex flex-wrap justify-center items-center gap-8 opacity-60">
              {[
                { name: "PubMed", logo: "üè•" },
                { name: "Springer", logo: "üìñ" },
                { name: "Cambridge", logo: "üéì" },
                { name: "Oxford", logo: "üìö" },
                { name: "CiteSeer", logo: "üîç" },
                { name: "IEEE", logo: "‚ö°" },
                { name: "Taylor", logo: "üìù" }
              ].map((source, index) => (
                <div key={index} className="flex items-center gap-2 text-gray-500 hover:text-gray-700 transition-colors">
                  <span className="text-2xl">{source.logo}</span>
                  <span className="text-sm font-medium">{source.name}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
